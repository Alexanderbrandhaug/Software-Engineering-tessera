package gruppe4.tessera.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import gruppe4.tessera.model.Post;
import gruppe4.tessera.model.User;
import gruppe4.tessera.service.PostService;
import gruppe4.tessera.service.UserService;

@Controller // This means that this class is a Controller
@RequestMapping(path="/tessera") // This means URL's start with /tessera (after Application path)
@CrossOrigin("*") // to enable all hosts to use endpoints, preventing CORS error
public class PostController {



@Autowired // This means to get the bean called userRepository
// Which is auto-generated by Spring, we will use it to handle the data
private PostService postService;
@Autowired
private UserService userservice;


@PostMapping(path="/add/post")
public @ResponseBody String addNewPost (@RequestParam String description, @RequestParam String title, @RequestParam String email) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    User a = userservice.findUserByEmail(email);
    Post s = new Post();
    s.setTitle(title);
    s.setDescription(description);
    s.setAuthor(a);
    postService.savePost(s);

      return "Saved";
    }

    @GetMapping(path="/posts")
    public @ResponseBody Iterable<Post> getAllPosts() {
      // This returns a JSON or XML with all users
      return postService.getAllPosts();
    }

}
